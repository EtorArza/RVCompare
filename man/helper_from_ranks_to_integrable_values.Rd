% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RVCompare.R
\name{helper_from_ranks_to_integrable_values}
\alias{helper_from_ranks_to_integrable_values}
\title{Helper function for get_Y_AB_bounds_bootstrap.}
\usage{
helper_from_ranks_to_integrable_values(
  rank_interval_mult,
  rank_interval_lengths,
  r_max,
  j_max,
  cumulative = FALSE
)
}
\arguments{
\item{r_max}{The largest rank.}

\item{j_max}{the largest index that will be used.}

\item{cumulative}{wether the integrable values should be cumulative or not. Cumulative values used in the estimation of the empirical distribution.}

\item{sortedRanks}{the sorted ranks of either the observed X_A or X_B.}
}
\value{
the probability density in this point
}
\description{
The density corresponding to the position in index j is computed, given the SORTED ranks, and r_max
}
\examples{
### Example 1 ###
j_max <- 12
r_max <- 6
rank_interval_mult <- c(4,7,0,1,0)
rank_interval_lengths <- c(1,1,1,2,2)
densities <- helper_from_ranks_to_integrable_values(
             rank_interval_mult=rank_interval_mult, rank_interval_lengths=rank_interval_lengths, r_max=r_max, j_max=j_max)
plot(x = 0:j_max / j_max, y = densities, type="l")
# 0.9347826 0.9782609 1.0000000 1.0000000 1.0000000 1.0000000
print(utils::tail(helperTrapezoidRule(densities)))
plot(x = 0:j_max / j_max, y = helperTrapezoidRule(densities), type="l")

### Example 2 ###
j_max <- 12
r_max <- 19
# sortedRanks <-          c(0,0,1,1,   3,    5, 6,   18, 19)
rank_interval_mult <-     c(2,      0, 1, 0, 1,   0  ,1 ,1)
rank_interval_lengths <-  c(2,      1, 1, 1, 2,   11 ,1 ,1)
densities <- helper_from_ranks_to_integrable_values(
             rank_interval_mult=rank_interval_mult, rank_interval_lengths=rank_interval_lengths, r_max=r_max, j_max=j_max)
plot(x = 0:j_max / j_max, y = densities, type="l")
# 0.8000000 0.8000000 0.8000000 0.8000000 0.8666667 1.0000000
print(utils::tail(helperTrapezoidRule(densities)))
plot(x = 0:j_max / j_max, y = helperTrapezoidRule(densities), type="l")

### Example 3 ###
j_max <- 12
r_max <- 8
# sortedRanks <-          c(   1,1,   3,    5, 6)
rank_interval_mult <-     c(0, 2,  0, 1, 0, 1, 1)
rank_interval_lengths <-  c(1, 1,  1, 1, 1, 1, 1)
densities <- helper_from_ranks_to_integrable_values(
             rank_interval_mult=rank_interval_mult, rank_interval_lengths=rank_interval_lengths, r_max=r_max, j_max=j_max)
plot(x = 0:j_max / j_max, y = densities, type="l")
# 0.6428571 0.7857143 0.9285714 1.0000000 1.0000000 1.0000000
print(utils::tail(helperTrapezoidRule(densities)))
plot(x = 0:j_max / j_max, y = helperTrapezoidRule(densities), type="l")
}
\keyword{internal}
